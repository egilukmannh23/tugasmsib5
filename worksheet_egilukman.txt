//8. Membuat tabel produk
create table produk (
    -> id int auto_increment primary key,
    -> kode varchar(10),
    -> nama varchar(45),
    -> harga_beli double default 0,
    -> harga_jual double default 0,
    -> stok int(11),
    -> min_stok int(11),
    -> jenis_produk_id int(11));

//9. Membuat tabel pesanan item
create table pesanan_item (
    -> id int auto_increment primary key,
    -> produk_id int(11),
    -> pesanan_id int(11),
    -> qty int(11),
    -> harga double default 0
    -> );

//10. Membuat tabel vendor
create table vendor (
    -> id int auto_increment primary key,
    -> nomor varchar(4),
    -> nama varchar(40),
    -> kota varchar(30),
    -> kontak varchar(30)
    -> );

//11. Membuat tabel pembelian
create table pembelian (
    -> id int auto_increment primary key,
    -> tanggal varchar(45),
    -> nomor varchar(10),
    -> produk_id int (11),
    -> jumlah int(11),
    -> harga double default 0,
    -> vendor_id int(11)
    -> );

//mengisi tabel produk
 insert into produk (kode,nama,harga_beli,harga_jual,stok,min_stok,jenis_produk_id) values
    -> ("A1","kulkas",4500000,5000000,5,2,1),
    -> ("A2","kompor gas",250000,500000,10,2,2),
    -> ("A3","Galon",30000,50000,20,1,3),
    -> ("A4","dispenser",130000,250000,15,1,4),
    -> ("A5","gantungan baju",5000,20000,35,1,5);

//mengisi tabel pelanggan
insert into pelanggan (kode, nama, jk, tmp_lahir, tgl_lahir, email)
values
    ('P001', 'Jono', 'Laki-laki', 'Jakarta', '1990-05-15', 'jono123@gmail.com'),
    ('P002', 'tina ', 'Perempuan', 'Surabaya', '1988-08-20', 'tinatinu@gmail.com'),
    ('P003', 'Robi', 'Laki-laki', 'Bandung', '1995-03-10', 'robi99@gmail.com'),
    ('P004', 'Imel', 'Perempuan', 'Yogyakarta', '1992-11-25', 'imel878@gmail.com'),
    ('P005', 'Darma', 'Laki-laki', 'Semarang', '1987-09-02', 'darma777@gmail.com'),
    ('P006', 'Maryani', 'Perempuan', 'Medan', '1998-07-12', 'maryani345@gmail.com');


//2.2
//1. Tampilkan data produk yang stoknya 3 dan 10
SELECT * from produk WHERE stok=3 OR stok=10;

//2. Tampilkan data produk yang harga jualnya kurang dari 5 juta tetapi lebih dari 500 ribu
SELECT * FROM produk WHERE harga_jual < 5000000 AND harga_jual > 500000;

//3.Tampilkan data produk yang harus segera ditambah stoknya
SELECT * FROM produk WHERE min_stok < stok;

//4.Tampilkan data pelanggan mulai dari yang paling muda
SELECT * FROM pelanggan ORDER BY tgl_lahir DESC;

//5.tampilkan data pelanggan yang lahirnya di jakarta dan gendernya Perempuan
SELECT * FROM pelanggan WHERE tmp_lahir='jakarta' AND jk='P';

//6. tampilkan data pelanggan yang id nya 2,4,6
SELECT * from pelanggan WHERE id IN (2,4,6);

//7.tampilkan data produk yang harganya antara 500 ribu sampai 6 juta
SELECT * FROM produk WHERE harga_jual >= 500000 AND harga_jual<= 6000000;



//2.3
//1. Tampilkan produk yang kode awalnya huruf k dan huruf magi
 select * from produk where kode like 'K%' or kode like 'M%';

//2. Tampilkan produk yang kode awalnya bukan huruf M
select * from produk where kode not like 'M%';

//3. tampilkan produk produk televisi
select * from produk where nama like 'Televisi%';

//4. tampilkan pelanggan yang mengandung huruf SA 
select * from pelanggan where nama like '%SA%';

//5. tampilkan pelanggan yang lahir di jakarta dan mengandung huruf Yo 
select * from pelanggan where tmp_lahir='jakarta' AND nama like '%yo%';

//6. tampilkan nama pelanggan yang huruf ke 2 nya adalah A 
select nama from pelanggan where substring(nama,2,1) = 'a';



//2.4
//1. tampilkan 2 data produk termahal
select * from produk order by harga_beli desc limit 2;

//2. Tampilkan produk yang paling murah
select * from produk where harga_beli = (select min(harga_beli) from produk);

//3. tampilkan produk yang stoknya paling banyak
select * from produk where stok = (select max(stok) from produk);

//4. tampilkan 2 produk yang stoknya paling sedikit
select * from produk order by stok asc limit 2;

//5. tampilkan pelanggan yang paling muda
select * from pelanggan order by tgl_lahir asc limit 1;

//tampilkan pelanggan yang paling tua 
select * from pelanggan order by tgl_lahir desc limit 1;